memberSearchIndex = [{"p":"com.github.skopylov58.functional","c":"Either","l":"accept(Consumer<? super L>, Consumer<? super R>)","u":"accept(java.util.function.Consumer,java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"Try.CheckedConsumer","l":"accept(T)"},{"p":"com.github.skopylov58.functional","c":"Validation.Builder","l":"addValidation(Function<T, R>, Validation<R, E>)","u":"addValidation(java.util.function.Function,com.github.skopylov58.functional.Validation)"},{"p":"com.github.skopylov58.functional","c":"Validation.Builder","l":"addValidation(Predicate<T>, E)","u":"addValidation(java.util.function.Predicate,E)"},{"p":"com.github.skopylov58.functional","c":"Validation.Builder","l":"addValidation(Predicate<T>, Function<T, E>)","u":"addValidation(java.util.function.Predicate,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"after(Function<T, R>, Consumer<R>)","u":"after(java.util.function.Function,java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"andFinally(Try.CheckedRunnable)","u":"andFinally(com.github.skopylov58.functional.Try.CheckedRunnable)"},{"p":"com.github.skopylov58.functional","c":"Reader","l":"apply(CTX)"},{"p":"com.github.skopylov58.functional","c":"Decorator","l":"apply(T)"},{"p":"com.github.skopylov58.functional","c":"Memo","l":"apply(T)"},{"p":"com.github.skopylov58.functional","c":"Try.CheckedFunction","l":"apply(T)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.CheckedFunction","l":"apply(T)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"asCloseable()"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"before(Function<T, R>, Consumer<T>)","u":"before(java.util.function.Function,java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.BooleanLatch","l":"BooleanLatch()","u":"%3Cinit%3E()"},{"p":"com.github.skopylov58.functional","c":"Validation.Builder","l":"build()"},{"p":"com.github.skopylov58.functional","c":"Validation","l":"builder()"},{"p":"com.github.skopylov58.functional","c":"Either","l":"catching(Try.CheckedConsumer<? super R>)","u":"catching(com.github.skopylov58.functional.Try.CheckedConsumer)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"catching(Try.CheckedFunction<? super R, ? extends T>)","u":"catching(com.github.skopylov58.functional.Try.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"catching(Try.CheckedFunction<T, R>)","u":"catching(com.github.skopylov58.functional.Try.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"catching(Try.CheckedSupplier<? extends R>)","u":"catching(com.github.skopylov58.functional.Try.CheckedSupplier)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"catchingMapper(TryUtils.CheckedFunction<T, R>, BiFunction<T, Exception, R>)","u":"catchingMapper(com.github.skopylov58.functional.TryUtils.CheckedFunction,java.util.function.BiFunction)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"catchingMapper(TryUtils.CheckedFunction<T, R>, Supplier<R>)","u":"catchingMapper(com.github.skopylov58.functional.TryUtils.CheckedFunction,java.util.function.Supplier)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.ResultJava8","l":"cause()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"close()"},{"p":"com.github.skopylov58.functional","c":"Try.Failure","l":"close()"},{"p":"com.github.skopylov58.functional","c":"Try.Success","l":"close()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"consumeCatching(Try.CheckedConsumer<T>)","u":"consumeCatching(com.github.skopylov58.functional.Try.CheckedConsumer)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"ctou(Consumer<T>)","u":"ctou(java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"Decorator","l":"decorate(Function<T, R>, Consumer<T>)","u":"decorate(java.util.function.Function,java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"Either.Left","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.github.skopylov58.functional","c":"Either.Right","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"exception()"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"fail(E)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.ResultJava8","l":"failed()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"failure(Exception)","u":"failure(java.lang.Exception)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"failure(Exception)","u":"failure(java.lang.Exception)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"filter(Predicate<? super R>)","u":"filter(java.util.function.Predicate)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"filter(Predicate<? super R>, Function<? super R, ? extends L>)","u":"filter(java.util.function.Predicate,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"filter(Predicate<? super T>)","u":"filter(java.util.function.Predicate)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"filter(Predicate<T>)","u":"filter(java.util.function.Predicate)"},{"p":"com.github.skopylov58.functional","c":"Tuple","l":"first"},{"p":"com.github.skopylov58.functional","c":"Reader","l":"flatMap(Function<? super A, Reader<CTX, ? extends U>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"flatMap(Function<? super A, ZIO<R, E, B>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"flatMap(Function<? super R, ? extends Either<? extends L, ? extends T>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Monad","l":"flatMap(Function<? super T, ? extends Monad<R>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Option.None","l":"flatMap(Function<? super T, ? extends Monad<R>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Option.Some","l":"flatMap(Function<? super T, ? extends Monad<R>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"flatMap(Function<? super T, Try<R>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"IO","l":"flatMap(Function<T, IO<R>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"flatMap(Function<T, TryUtils.Result<R>>)","u":"flatMap(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"fold(Consumer<T>, Consumer<Exception>)","u":"fold(java.util.function.Consumer,java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"fold(Function<? super L, ? extends T>, Function<? super R, ? extends T>)","u":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Either.Left","l":"fold(Function<? super L, ? extends T>, Function<? super R, ? extends T>)","u":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Either.Right","l":"fold(Function<? super L, ? extends T>, Function<? super R, ? extends T>)","u":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Try.Failure","l":"fold(Function<? super T, ? extends R>, Function<? super Exception, ? extends R>)","u":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"fold(Function<? super T, ? extends R>, Function<? super Exception, ? extends R>)","u":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Try.Success","l":"fold(Function<? super T, ? extends R>, Function<? super Exception, ? extends R>)","u":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"fold(Function<T, R>, Function<Exception, R>)","u":"fold(java.util.function.Function,java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Try.CheckedSupplier","l":"get()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"get()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.CheckedSupplier","l":"get()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"getCatching(Try.CheckedSupplier<T>)","u":"getCatching(com.github.skopylov58.functional.Try.CheckedSupplier)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"handle(BiFunction<T, Exception, TryUtils.Result<R>>)","u":"handle(java.util.function.BiFunction)"},{"p":"com.github.skopylov58.functional","c":"Either.Left","l":"hashCode()"},{"p":"com.github.skopylov58.functional","c":"Either.Right","l":"hashCode()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"hashCode()"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"hashCode()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"isFailure()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"isFailure()"},{"p":"com.github.skopylov58.functional","c":"Either","l":"isLeft()"},{"p":"com.github.skopylov58.functional","c":"Either","l":"isRight()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"isSuccess()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"isSuccess()"},{"p":"com.github.skopylov58.functional","c":"Either.Left","l":"left()"},{"p":"com.github.skopylov58.functional","c":"Either","l":"left(L)"},{"p":"com.github.skopylov58.functional","c":"Either.Left","l":"Left(L)","u":"%3Cinit%3E(L)"},{"p":"com.github.skopylov58.functional","c":"Monad","l":"liftM2(Monad<A>, Monad<B>, BiFunction<A, B, C>)","u":"liftM2(com.github.skopylov58.functional.Monad,com.github.skopylov58.functional.Monad,java.util.function.BiFunction)"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"map(Function<? super A, ? extends B>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Reader","l":"map(Function<? super A, ? extends U>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"map(Function<? super R, ? extends T>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Monad","l":"map(Function<? super T, ? extends R>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Option.None","l":"map(Function<? super T, ? extends R>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Option.Some","l":"map(Function<? super T, ? extends R>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Functor","l":"map(Function<T, R>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"map(Function<T, R>)","u":"map(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"map(Try.CheckedFunction<? super T, ? extends R>)","u":"map(com.github.skopylov58.functional.Try.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"measure(Runnable)","u":"measure(java.lang.Runnable)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"memoize(Function<T, R>)","u":"memoize(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"memoize(Function<T, R>, Map<T, R>)","u":"memoize(java.util.function.Function,java.util.Map)"},{"p":"com.github.skopylov58.functional","c":"Option","l":"none()"},{"p":"com.github.skopylov58.functional","c":"Reader","l":"of(Function<CTX, A>)","u":"of(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"Option","l":"of(T)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"of(Try.CheckedRunnable)","u":"of(com.github.skopylov58.functional.Try.CheckedRunnable)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"of(Try.CheckedSupplier<? extends T>)","u":"of(com.github.skopylov58.functional.Try.CheckedSupplier)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"once(Runnable)","u":"once(java.lang.Runnable)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"onFailure(Consumer<Exception>)","u":"onFailure(java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"onSuccess(Try.CheckedConsumer<? super T>)","u":"onSuccess(com.github.skopylov58.functional.Try.CheckedConsumer)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"onSuccessCatching(TryUtils.Result<T>, Try.CheckedConsumer<T>)","u":"onSuccessCatching(com.github.skopylov58.functional.TryUtils.Result,com.github.skopylov58.functional.Try.CheckedConsumer)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"optional()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"optional()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"optional()"},{"p":"com.github.skopylov58.functional","c":"Try.Failure","l":"orElseThrow()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"orElseThrow()"},{"p":"com.github.skopylov58.functional","c":"Try.Success","l":"orElseThrow()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"peek(Try.CheckedConsumer<Try<T>>)","u":"peek(com.github.skopylov58.functional.Try.CheckedConsumer)"},{"p":"com.github.skopylov58.functional","c":"Reader","l":"pure(A)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"recover(Function<Exception, TryUtils.Result<T>>)","u":"recover(java.util.function.Function)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"recover(Supplier<TryUtils.Result<T>>)","u":"recover(java.util.function.Supplier)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"recover(Try.CheckedSupplier<? extends T>)","u":"recover(com.github.skopylov58.functional.Try.CheckedSupplier)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"recover(Try.CheckedSupplier<? extends T>, Predicate<Exception>)","u":"recover(com.github.skopylov58.functional.Try.CheckedSupplier,java.util.function.Predicate)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"result()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.ResultJava8","l":"result()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"Result(T, Exception)","u":"%3Cinit%3E(T,java.lang.Exception)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.ResultJava8","l":"ResultJava8(Exception)","u":"%3Cinit%3E(java.lang.Exception)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.ResultJava8","l":"ResultJava8(T)","u":"%3Cinit%3E(T)"},{"p":"com.github.skopylov58.functional","c":"Either.Right","l":"right()"},{"p":"com.github.skopylov58.functional","c":"Either","l":"right(R)"},{"p":"com.github.skopylov58.functional","c":"Either.Right","l":"Right(R)","u":"%3Cinit%3E(R)"},{"p":"com.github.skopylov58.functional","c":"IO","l":"run()"},{"p":"com.github.skopylov58.functional","c":"Try.CheckedRunnable","l":"run()"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"run()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"runCatching(Try.CheckedRunnable)","u":"runCatching(com.github.skopylov58.functional.Try.CheckedRunnable)"},{"p":"com.github.skopylov58.functional","c":"Tuple","l":"second"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"sneakyThrow(Throwable)","u":"sneakyThrow(java.lang.Throwable)"},{"p":"com.github.skopylov58.functional","c":"Option","l":"some(T)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"stream()"},{"p":"com.github.skopylov58.functional","c":"Try","l":"stream()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"stream()"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"succeed(A)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"success(T)"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"success(T)"},{"p":"com.github.skopylov58.functional","c":"Either","l":"swap()"},{"p":"com.github.skopylov58.functional","c":"Tuple3","l":"third"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"throwingMapper(TryUtils.CheckedFunction<T, R>)","u":"throwingMapper(com.github.skopylov58.functional.TryUtils.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toEither(TryUtils.CheckedFunction<T, R>)","u":"toEither(com.github.skopylov58.functional.TryUtils.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"toFunction(Try.CheckedConsumer<? super T>)","u":"toFunction(com.github.skopylov58.functional.Try.CheckedConsumer)"},{"p":"com.github.skopylov58.functional","c":"Try","l":"toFunction(Try.CheckedSupplier<? extends U>)","u":"toFunction(com.github.skopylov58.functional.Try.CheckedSupplier)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toFuture(TryUtils.CheckedFunction<T, R>)","u":"toFuture(com.github.skopylov58.functional.TryUtils.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toOptional(TryUtils.CheckedFunction<T, R>)","u":"toOptional(com.github.skopylov58.functional.TryUtils.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toOptional(TryUtils.CheckedFunction<T, R>, BiConsumer<T, Exception>)","u":"toOptional(com.github.skopylov58.functional.TryUtils.CheckedFunction,java.util.function.BiConsumer)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toOptional(TryUtils.CheckedSupplier<T>)","u":"toOptional(com.github.skopylov58.functional.TryUtils.CheckedSupplier)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toOptional(TryUtils.CheckedSupplier<T>, Consumer<Exception>)","u":"toOptional(com.github.skopylov58.functional.TryUtils.CheckedSupplier,java.util.function.Consumer)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toResult(TryUtils.CheckedFunction<T, R>)","u":"toResult(com.github.skopylov58.functional.TryUtils.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toResultJava8(TryUtils.CheckedFunction<T, R>)","u":"toResultJava8(com.github.skopylov58.functional.TryUtils.CheckedFunction)"},{"p":"com.github.skopylov58.functional","c":"Either.Left","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"Either.Right","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"Option.None","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"Option.Some","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"TryUtils.Result","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"Tuple","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"Tuple3","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"toString()"},{"p":"com.github.skopylov58.functional","c":"TryUtils","l":"toSupplier(TryUtils.CheckedSupplier<T>)","u":"toSupplier(com.github.skopylov58.functional.TryUtils.CheckedSupplier)"},{"p":"com.github.skopylov58.functional","c":"Tuple","l":"Tuple(F, S)","u":"%3Cinit%3E(F,S)"},{"p":"com.github.skopylov58.functional","c":"Tuple3","l":"Tuple3(F, S, T)","u":"%3Cinit%3E(F,S,T)"},{"p":"com.github.skopylov58.functional","c":"Validation","l":"validate(T)"},{"p":"com.github.skopylov58.functional","c":"Validation","l":"validateToEither(T)"},{"p":"com.github.skopylov58.functional","c":"ZIO","l":"ZIO(Function<R, Either<E, A>>)","u":"%3Cinit%3E(java.util.function.Function)"}];updateSearchResults();